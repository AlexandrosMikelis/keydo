version: "3.9"

services:
  app: &app
    build:
      context: .
      dockerfile: app/compose/local/django/Dockerfile 
      args:
        - DEV=true
    image: keystroke_local_django
    platform: linux/x86_64
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    # command: >
    #   sh -c "python manage.py wait_for_db && 
    #          python manage.py migrate &&
    #          python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      # - DB_USER=
      # - DB_PASS=
    env_file:
      - app/.envs/.django
      - app/.envs/.postgres
    depends_on:
      - db
    command: /start

  kafka_consumer:
    <<: *app
    image: kafka_consumer_image
    ports: []
    depends_on:
      - broker
    command: /start-faust

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - app/.envs/.postgres
    ports:
        - "5432:5432"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    restart: on-failure
  
  metabase:
      env_file:
      - app/.envs/.metabase
      ports:
        - 3000:3000
      image: metabase/metabase
      restart: always
      depends_on:
        - db
volumes:
  dev-db-data:
